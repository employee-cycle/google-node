{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "hire:v1beta1",
  "name": "hire",
  "canonicalName": "Hire",
  "version": "v1beta1",
  "revision": "0",
  "title": "Hire API",
  "description": "Hire API allows developers to interact with Hire on behalf of a Hire customer.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://developers.google.com/hire/",
  "protocol": "rest",
  "rootUrl": "https://hire.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://hire.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "schemas": {
    "ListCandidatesResponse": {
      "id": "ListCandidatesResponse",
      "description": "Response containing a list of candidates for a specific request.",
      "type": "object",
      "properties": {
        "candidates": {
          "description": "The list of candidates matching the provided filter.",
          "type": "array",
          "items": {
            "$ref": "Candidate"
          }
        },
        "nextPageToken": {
          "description": "Token used to access the next page of this result. Omitted if no further\nresults are available. Token can be used up to 6 hours after the original\n`ListCandidatesRequest`. Note that in some rare cases token might become\ninvalid before.",
          "type": "string"
        }
      }
    },
    "Candidate": {
      "id": "Candidate",
      "description": "A candidate in Hire.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of this Candidate. Candidate name takes the form of\n\"tenants\/*\/candidates\/*\".",
          "type": "string"
        },
        "createTime": {
          "description": "Timestamp when the candidate record was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "personName": {
          "description": "Name of the candidate.",
          "$ref": "PersonName"
        },
        "email": {
          "description": "Candidate's primary email address.",
          "type": "string"
        },
        "additionalEmails": {
          "description": "Candidate's other email addresses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uris": {
          "description": "A list of the candidate's URIs for example a URL for a personal website, a\ndigital-portfolio, or a LinkedIn profile.\n\nMax string length is 2083 characters per uri.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phoneNumber": {
          "description": "Candidate's primary phone number.",
          "type": "string"
        },
        "additionalPhoneNumbers": {
          "description": "Candidate's other phone numbers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "postalAddresses": {
          "description": "List of structured candidate addresses, not validated as actually real\naddresses.",
          "type": "array",
          "items": {
            "$ref": "PostalAddress"
          }
        },
        "employmentInfo": {
          "description": "List of the candidate's experiences.",
          "type": "array",
          "items": {
            "$ref": "EmploymentInfo"
          }
        },
        "educationInfo": {
          "description": "List of the candidate's education.",
          "type": "array",
          "items": {
            "$ref": "EducationInfo"
          }
        },
        "source": {
          "description": "Candidate's source.",
          "$ref": "Source"
        },
        "visaAssistanceInfo": {
          "description": "Details of a Candidate's need for visa assistance.",
          "$ref": "VisaAssistanceInfo"
        },
        "startDate": {
          "description": "Candidate start date, if hired.",
          "$ref": "Date"
        },
        "applications": {
          "description": "List of all application resource names that this candidate is and has been\nconsidered for. Must follow the format of \"tenants\/*\/applications\/*\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PersonName": {
      "id": "PersonName",
      "description": "A structured representation of name.",
      "type": "object",
      "properties": {
        "givenName": {
          "description": "Individual's given (first) name.",
          "type": "string"
        },
        "familyName": {
          "description": "Individual's family (last) name.",
          "type": "string"
        }
      }
    },
    "PostalAddress": {
      "id": "PostalAddress",
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses.\nGiven a postal address, a postal service can deliver items to a premise, P.O.\nBox or similar.\nIt is not intended to model geographical locations (roads, towns,\nmountains).\n\nIn typical usage an address would be created via user input or from importing\nexisting data, depending on the type of process.\n\nAdvice on address input \/ editing:\n - Use an i18n-ready address widget such as\n   https:\/\/github.com\/googlei18n\/libaddressinput)\n- Users should not be presented with UI elements for input or editing of\n  fields outside countries where that field is used.\n\nFor more guidance on how to use this schema, please see:\nhttps:\/\/support.google.com\/business\/answer\/6397478",
      "type": "object",
      "properties": {
        "revision": {
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is\nthe latest revision.\n\nAll new revisions **must** be backward compatible with old revisions.",
          "type": "integer",
          "format": "int32"
        },
        "regionCode": {
          "description": "Required. CLDR region code of the country\/region of the address. This\nis never inferred and it is up to the user to ensure the value is\ncorrect. See http:\/\/cldr.unicode.org\/ and\nhttp:\/\/www.unicode.org\/cldr\/charts\/30\/supplemental\/territory_information.html\nfor details. Example: \"CH\" for Switzerland.",
          "type": "string"
        },
        "languageCode": {
          "description": "Optional. BCP-47 language code of the contents of this address (if\nknown). This is often the UI language of the input form or is expected\nto match one of the languages used in the address' country\/region, or their\ntransliterated equivalents.\nThis can affect formatting in certain countries, but is not critical\nto the correctness of the data and will never affect any validation or\nother non-formatting related operations.\n\nIf this value is not known, it should be omitted (rather than specifying a\npossibly incorrect default).\n\nExamples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".",
          "type": "string"
        },
        "postalCode": {
          "description": "Optional. Postal code of the address. Not all countries use or require\npostal codes to be present, but where they are used, they may trigger\nadditional validation with other parts of the address (e.g. state\/zip\nvalidation in the U.S.A.).",
          "type": "string"
        },
        "sortingCode": {
          "description": "Optional. Additional, country-specific, sorting code. This is not used\nin most regions. Where it is used, the value is either a string like\n\"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number\nalone, representing the \"sector code\" (Jamaica), \"delivery area indicator\"\n(Malawi) or \"post office indicator\" (e.g. C\u00F4te d'Ivoire).",
          "type": "string"
        },
        "administrativeArea": {
          "description": "Optional. Highest administrative subdivision which is used for postal\naddresses of a country or region.\nFor example, this can be a state, a province, an oblast, or a prefecture.\nSpecifically, for Spain this is the province and not the autonomous\ncommunity (e.g. \"Barcelona\" and not \"Catalonia\").\nMany countries don't use an administrative area in postal addresses. E.g.\nin Switzerland this should be left unpopulated.",
          "type": "string"
        },
        "locality": {
          "description": "Optional. Generally refers to the city\/town portion of the address.\nExamples: US city, IT comune, UK post town.\nIn regions of the world where localities are not well defined or do not fit\ninto this structure well, leave locality empty and use address_lines.",
          "type": "string"
        },
        "sublocality": {
          "description": "Optional. Sublocality of the address.\nFor example, this can be neighborhoods, boroughs, districts.",
          "type": "string"
        },
        "addressLines": {
          "description": "Unstructured address lines describing the lower levels of an address.\n\nBecause values in address_lines do not have type information and may\nsometimes contain multiple values in a single field (e.g.\n\"Austin, TX\"), it is important that the line order is clear. The order of\naddress lines should be \"envelope order\" for the country\/region of the\naddress. In places where this can vary (e.g. Japan), address_language is\nused to make it explicit (e.g. \"ja\" for large-to-small ordering and\n\"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of\nan address can be selected based on the language.\n\nThe minimum permitted structural representation of an address consists\nof a region_code with all remaining information placed in the\naddress_lines. It would be possible to format such an address very\napproximately without geocoding, but no semantic reasoning could be\nmade about any of the address components until it was at least\npartially resolved.\n\nCreating an address only containing a region_code and address_lines, and\nthen geocoding is the recommended way to handle completely unstructured\naddresses (as opposed to guessing which parts of the address should be\nlocalities or administrative areas).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recipients": {
          "description": "Optional. The recipient at the address.\nThis field may, under certain circumstances, contain multiline information.\nFor example, it might contain \"care of\" information.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organization": {
          "description": "Optional. The name of the organization at the address.",
          "type": "string"
        }
      }
    },
    "EmploymentInfo": {
      "id": "EmploymentInfo",
      "description": "EmploymentInfo describes the candidate experience information.",
      "type": "object",
      "properties": {
        "jobTitle": {
          "description": "The title of the role the candidate was employed for.",
          "type": "string"
        },
        "employer": {
          "description": "Company or organization name the experience was with.",
          "type": "string"
        },
        "startDate": {
          "description": "Start date of the employment.\n\nRequired.",
          "$ref": "Date"
        },
        "endDate": {
          "description": "End date of the employment.\n\nend_date must be after start_date or not provided, otherwise this\nemployment record will considered invalid and will be dropped.\n\nIf end_date is not provided, we will consider that it is a current\nemployment record.",
          "$ref": "Date"
        }
      }
    },
    "Date": {
      "id": "Date",
      "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EducationInfo": {
      "id": "EducationInfo",
      "description": "EducationInfo describes the candidate educational information.",
      "type": "object",
      "properties": {
        "school": {
          "description": "School attended.",
          "type": "string"
        },
        "major": {
          "description": "The field of study.",
          "type": "string"
        },
        "degree": {
          "description": "Educational degree name.",
          "type": "string"
        },
        "startDate": {
          "description": "Start date of the educational program.",
          "$ref": "Date"
        },
        "endDate": {
          "description": "End date of the educational program.\n\nend_date must be after start_date or not provided, otherwise this\nemployment record will considered invalid and will be dropped.\n\nIf end_date is not provided, we will consider the educational program\nongoing.",
          "$ref": "Date"
        }
      }
    },
    "Source": {
      "id": "Source",
      "description": "Source describes the pipeline from which the candidate originated from.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the source.",
          "enumDescriptions": [
            "No source specified, details are omitted.",
            "details is a label identifying the conduit of application, for\nexample Craigslist, Indeed, or internal transfer. Hire will set the\nlabel to a URL to the specific job board listing if tracking links were\nconfigured when the job was posted.",
            "details is a label identifying the person or agency that sourced\nthe candidate.",
            "details is the User who referred the Candidate. Note that\nreferrer will be omitted if the User has been archived or deleted.",
            "details is a label identifying the person or agency that sourced\nthe candidate."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "APPLICATION",
            "EXTERNAL_REFERRAL",
            "INTERNAL_REFERRAL",
            "SOURCING"
          ]
        },
        "referringUser": {
          "description": "User who referred the candidate, if any. It must have the format\n\"tenants\/*\/users\/*\"",
          "type": "string"
        },
        "label": {
          "description": "A short string used to qualify the source.  The value selected for a\nlabel is not constrained, but what is considered \"typical\" is detailed\nin each source type.",
          "type": "string"
        }
      }
    },
    "VisaAssistanceInfo": {
      "id": "VisaAssistanceInfo",
      "description": "VisaAssistanceInfo describes whether the candidate needs legal assistance for\nemployment authorization or immigration.",
      "type": "object",
      "properties": {
        "needsAssistance": {
          "description": "Candidate has indicated that they may require visa assistance for one or\nmore roles they're being considered for.",
          "type": "boolean"
        },
        "details": {
          "description": "Additional free form details to augment and clarify the needs_assistance\nfield.\n\nMax string length is 25KB.",
          "type": "string"
        }
      }
    },
    "ListJobsResponse": {
      "id": "ListJobsResponse",
      "description": "Response containing a list of jobs for a specific request.",
      "type": "object",
      "properties": {
        "jobs": {
          "description": "The list of jobs matching the provided filter.",
          "type": "array",
          "items": {
            "$ref": "Job"
          }
        },
        "nextPageToken": {
          "description": "Token used to access the next page of this result. Omitted if no further\nresults are available. Token can be used up to 6 hours after the original\n`ListJobsRequest`. Note that in some rare cases token might become invalid\nbefore.",
          "type": "string"
        }
      }
    },
    "Job": {
      "id": "Job",
      "description": "A job in Hire.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Required during UpdateJob.\n\nThe resource name of this Job. This is generated by the service when a job\nis created. Job name takes the form of \"tenants\/*\/jobs\/*\".",
          "type": "string"
        },
        "requisitionId": {
          "description": "Output only. Can be set on CreateJob.\n\nId used to link data with external systems.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only.\n\nDate the job was created or the date specified when importing this job.",
          "type": "string",
          "format": "google-datetime"
        },
        "creatingUser": {
          "description": "Optional.\n\nResource name of the user that created the job. It must have the format\nof \"tenants\/*\/users\/*\".",
          "type": "string"
        },
        "title": {
          "description": "Required.\n\nThe human readable job title.",
          "type": "string"
        },
        "department": {
          "description": "Optional.\n\nName of the department which the job is under.",
          "type": "string"
        },
        "employmentType": {
          "description": "Optional.\n\nType of job.",
          "enumDescriptions": [
            "Job is for an unspecified position type.",
            "Job is for a permanent position.",
            "Job is for a contractor position.",
            "Contracting position looking to move to permanent.",
            "Job is for an internship position."
          ],
          "type": "string",
          "enum": [
            "EMPLOYMENT_TYPE_UNSPECIFIED",
            "PERMANENT",
            "CONTRACT",
            "CONTRACT_TO_PERMANENT",
            "INTERNSHIP"
          ]
        },
        "timeCommitment": {
          "description": "Optional.\n\nTime commitment level for the job.",
          "enumDescriptions": [
            "Time commitment level for job is unspecified.",
            "Full time position.",
            "Part time position."
          ],
          "type": "string",
          "enum": [
            "TIME_COMMITMENT_UNSPECIFIED",
            "FULL_TIME",
            "PART_TIME"
          ]
        },
        "description": {
          "description": "Optional.\n\nDescription of the job.",
          "type": "string"
        },
        "hiringManagers": {
          "description": "List of resource names of the hiring managers for this job.\nThey must have the format of \"tenants\/*\/users\/*\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "recruiters": {
          "description": "List of resource names of the recruiters for this job.\nThey must have the format of \"tenants\/*\/users\/*\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "coordinators": {
          "description": "List of resource names of the coordinators for this job.\nThey must have the format of \"tenants\/*\/users\/*\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only.\n\nJob state.\n\nThe set of available job states differ depending on job request approvals.\n\nIf job request approvals is off, then state can be Job.State.OPEN or\nJob.State.CLOSED, and all jobs can be edited.\n\nIf job request approvals is on, then all states are available. In\nJob.State.CLOSED, Job.State.DRAFT, and\nJob.State.APPROVAL_REJECTED states, the job can be edited. In\nJob.State.OPEN and Job.State.PENDING_APPROVAL states, no job\nfields can be edited.\n\nJob req approvals can be toggled by a Hire admin at Admin > Approvals.",
          "enumDescriptions": [
            "Job state is unspecified.",
            "Job is open and can be published.\n\nIf job req approvals are enabled, then the job is also approved.",
            "Job has been closed and is no longer accepting job applicants.",
            "Only available if the tenant has job req approvals enabled.\n\nJob is currently in draft state.",
            "Only available if the tenant has job req approvals enabled.\n\nThe job has a pending approval request. When it has been approved, the\nJob.State will become OPEN. If it is rejected, the Job.State will\nbecome APPROVAL_REJECTED. If the request is canceled, the Job.State\nwill become DRAFT.",
            "Only available if the tenant has job req approvals enabled.\n\nOne of more of the job approvers has rejected the previously\nPENDING_APPROVAL job."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DRAFT",
            "PENDING_APPROVAL",
            "APPROVAL_REJECTED"
          ]
        },
        "publishState": {
          "description": "Output Only.\n\nPublish state of the job.",
          "enumDescriptions": [
            "Job publish state is unspecified.",
            "Only viewable internally, cannot be seen by job applicants.",
            "Job has been published and can be viewed externally and applied to by job\napplicants."
          ],
          "type": "string",
          "enum": [
            "PUBLISH_STATE_UNSPECIFIED",
            "NOT_PUBLISHED",
            "PUBLISHED"
          ]
        },
        "compensationInfo": {
          "description": "Optional.\n\nCompensation info for the job.",
          "$ref": "CompensationInfo"
        },
        "location": {
          "description": "Optional.\n\nLocation of the job.",
          "$ref": "Location"
        },
        "customFields": {
          "description": "Optional.\n\nMapping of CustomFieldSpec name to value for all custom fields for\nthis job.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "CompensationInfo": {
      "id": "CompensationInfo",
      "description": "Compensation information.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Optional.\n\nCompensation amount.",
          "$ref": "Money"
        },
        "range": {
          "description": "Optional.\n\nCompensation range.",
          "$ref": "CompensationRange"
        },
        "frequency": {
          "description": "Optional.\n\nCompensation frequency.",
          "enumDescriptions": [
            "Unspecified compensation frequency.",
            "Compensation is calculated on an annual basis.",
            "Compensation is calculated on an hourly basis."
          ],
          "type": "string",
          "enum": [
            "COMPENSATION_FREQUENCY_UNSPECIFIED",
            "ANNUAL",
            "HOURLY"
          ]
        },
        "candidateVisible": {
          "description": "Optional.\n\nIndicates if compensation information is available to candidates.",
          "type": "boolean"
        }
      }
    },
    "Money": {
      "id": "Money",
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The 3-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CompensationRange": {
      "id": "CompensationRange",
      "description": "Compensation range.",
      "type": "object",
      "properties": {
        "minimum": {
          "description": "Optional.\n\nMinimum compensation offered.",
          "$ref": "Money"
        },
        "maximum": {
          "description": "Optional.\n\nMaximum compensation offered.",
          "$ref": "Money"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "Describes a Google Places API location with a unique place identifier and a\nstructured addresses that will provide the written address.",
      "type": "object",
      "properties": {
        "placeId": {
          "description": "Optional.\n\nThe place_id provided by Google Places API to uniquely identify a\nlocation.",
          "type": "string"
        },
        "postalAddress": {
          "description": "Output only.\n\nStructured address, validated as real address.",
          "$ref": "PostalAddress"
        }
      }
    },
    "UpdateJobRequest": {
      "id": "UpdateJobRequest",
      "description": "Request message to update job.",
      "type": "object",
      "properties": {
        "job": {
          "description": "Required.\n\nThe job fields to update.",
          "$ref": "Job"
        },
        "updateMask": {
          "description": "Required.\n\nA field mask to specify the job fields to be updated. Only top level\nfields of Jobs are supported.\n\nSample `update_mask`: `{\"paths\": [\"job.description\", \"job.title\"]}`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "CreateJobRequest": {
      "id": "CreateJobRequest",
      "description": "Request message to create job.",
      "type": "object",
      "properties": {
        "job": {
          "description": "Required.\n\nThe job to create.",
          "$ref": "Job"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "ListApplicationsResponse": {
      "id": "ListApplicationsResponse",
      "description": "Response containing a list of applications for a specific request.",
      "type": "object",
      "properties": {
        "applications": {
          "description": "The list of applications matching the provided filter.",
          "type": "array",
          "items": {
            "$ref": "Application"
          }
        },
        "nextPageToken": {
          "description": "Token used to access the next page of this result. Omitted if no further\nresults are available. Token can be used up to 6 hours after the original\n`ListApplicationsRequest`. Note that in some rare cases token might become\ninvalid before.",
          "type": "string"
        }
      }
    },
    "Application": {
      "id": "Application",
      "description": "A job application in Hire.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of this application. Application name takes the form\nof \"tenants\/*\/applications\/*\".",
          "type": "string"
        },
        "job": {
          "description": "Resource name of the job that this application is for. It must have the\nformat of \"tenants\/*\/jobs\/*\".",
          "type": "string"
        },
        "candidate": {
          "description": "Resource name of the candidate that is submitting this application.\nIt must have the format of \"tenants\/*\/candidates\/*\".",
          "type": "string"
        },
        "createTime": {
          "description": "Date the application was created or the date specified when importing\nthis application.",
          "type": "string",
          "format": "google-datetime"
        },
        "creatingUser": {
          "description": "Resource name of the user that created the application. It must\nhave the format \"tenants\/*\/users\/*\"",
          "type": "string"
        },
        "status": {
          "description": "Application status",
          "$ref": "Status"
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "Specifies all information related to an applicant's status\nin the application process.",
      "type": "object",
      "properties": {
        "state": {
          "description": "The application state specifies the general state of the application.",
          "enumDescriptions": [
            "No application state specified",
            "The hiring team or applicant is interested, but a formal application\nhas not yet been submitted.",
            "An application has been submitted; the applicant is being assessed,\nor an offer has been extended and has not been accepted.",
            "The application has been rejected by either the company or candidate.",
            "An offer letter for this application has been sent to and signed by the\ncandidate."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROSPECTIVE",
            "ACTIVE",
            "REJECTED",
            "ACCEPTED"
          ]
        },
        "processStage": {
          "description": "Process stage specifices how far into the interview process a candidate\nis. Process stage can be set only when a application state is\nApplication.Status.State.ACTIVE.",
          "$ref": "ProcessStage"
        },
        "rejectionReason": {
          "description": "Reason for rejection, only populated when the application state is\nApplication.Status.State.REJECTED.",
          "type": "string"
        },
        "updateTime": {
          "description": "Update time for all fields in Application.Status.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ProcessStage": {
      "id": "ProcessStage",
      "description": "The current interview process stage that the candidate is in. It is only\nused when a application state is Application.Status.State.ACTIVE.",
      "type": "object",
      "properties": {
        "stage": {
          "description": "Stage is a descriptor that further specifies a reporting category. For\nexample, if reporting category is INTERVIEW, possible stage names could\ninclude, \"First round interview\" or \"Final round interview\". Stage\nallows for further customization for the user.",
          "type": "string"
        },
        "reportingCategory": {
          "description": "The reporting category is a stable set of values used for\ngrouping process stages across different hiring processes",
          "enumDescriptions": [
            "Reporting category is unspecified. Should always be unspecified\nwhen Application.Status.State is not\nApplication.Status.State.ACTIVE.",
            "Application is in the New category.",
            "Application is in the Screen category.",
            "Application is in the Interview category.",
            "Application is in the Offer category."
          ],
          "type": "string",
          "enum": [
            "REPORTING_CATEGORY_UNSPECIFIED",
            "NEW",
            "SCREEN",
            "INTERVIEW",
            "OFFER"
          ]
        }
      }
    },
    "User": {
      "id": "User",
      "description": "A user in Hire.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of this User. User name takes the form of\n\"tenants\/*\/users\/*\".",
          "type": "string"
        },
        "personName": {
          "description": "Name of the user.",
          "$ref": "PersonName"
        },
        "email": {
          "description": "User's primary email address.",
          "type": "string"
        },
        "sub": {
          "description": "An identifier for the user, unique among all Google accounts and never\nreused.",
          "type": "string"
        }
      }
    },
    "ListCustomFieldSpecsResponse": {
      "id": "ListCustomFieldSpecsResponse",
      "description": "Response containing a list of custom field specs for a specific request.",
      "type": "object",
      "properties": {
        "customFieldSpecs": {
          "description": "The list of custom field specs matching the provided filter.",
          "type": "array",
          "items": {
            "$ref": "CustomFieldSpec"
          }
        },
        "nextPageToken": {
          "description": "Token used to access the next page of this result. Omitted if no further\nresults are available. Token can be used up to 6 hours after the original\n`ListCustomFieldSpecsRequest`. Note that in some rare cases token might\nbecome invalid before.",
          "type": "string"
        }
      }
    },
    "CustomFieldSpec": {
      "id": "CustomFieldSpec",
      "description": "A custom field spec in Hire.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of this custom field spec. This is generated by the\nservice when a custom field spec is created. Name takes the form of\n\"tenants\/*\/customFieldSpecs\/*\".",
          "type": "string"
        },
        "description": {
          "description": "Description of custom field.",
          "type": "string"
        },
        "objectTypes": {
          "description": "Types of object that this custom field spec refers to.",
          "enumDescriptions": [
            "Custom field spec refers to an unspecified object type.",
            "Custom field spec refers to a Candidate.",
            "Custom field spec refers to a Job.",
            "Custom field spec refers to a Application.",
            "Custom field spec refers to a User."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "OBJECT_TYPE_UNSPECIFIED",
              "CANDIDATE",
              "JOB",
              "APPLICATION",
              "USER"
            ]
          }
        },
        "fieldType": {
          "description": "Type of field that the custom field holds.",
          "enumDescriptions": [
            "Custom field is unspecified field type.",
            "Custom field is a bool field type. Expected value is a bool.",
            "Custom field is a single line of text. Expected value is a string.",
            "Custom field is multiple lines of text. Expected value is a string.",
            "Custom field is a dropdown field type. Expected value is one of the\noption_values strings."
          ],
          "type": "string",
          "enum": [
            "FIELD_TYPE_UNSPECIFIED",
            "BOOL",
            "SINGLE_LINE_TEXT",
            "MULTI_LINE_TEXT",
            "DROPDOWN"
          ]
        },
        "optionValues": {
          "description": "The values that can be held by the custom field if\nCustomFieldSpec.FieldType is CustomFieldSpec.FieldType.DROPDOWN.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "resources": {
    "tenants": {
      "resources": {
        "candidates": {
          "methods": {
            "list": {
              "id": "hire.tenants.candidates.list",
              "path": "v1beta1/{+parent}/candidates",
              "flatPath": "v1beta1/tenants/{tenantsId}/candidates",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The name of the tenant to list candidates on. We accept \"my_tenant\" as\na valid tenant if the account only has access to one tenant.\nA valid parent would be \"tenants\/my_tenant\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of items to return.\nAcceptable values are 1 to 100. Defaults to 100.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional pagination token returned in a previous request.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "description": "Optional filter on candidate fields. Supported dimensions for querying\nare as follows:\n\n* applications.status.state=[Application.Status.State]\n\nAttempts to query with an unrecognized filter dimension will result in\nan INVALID_ARGUMENT error. Sample Query:\n\n* applications.status.state=ACCEPTED",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListCandidatesResponse"
              },
              "description": "List the candidates in Hire."
            },
            "get": {
              "id": "hire.tenants.candidates.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/tenants/{tenantsId}/candidates/{candidatesId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the candidate to retrieve.",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+\/candidates\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Candidate"
              },
              "description": "Get a candidate in Hire."
            }
          }
        },
        "jobs": {
          "methods": {
            "list": {
              "id": "hire.tenants.jobs.list",
              "path": "v1beta1/{+parent}/jobs",
              "flatPath": "v1beta1/tenants/{tenantsId}/jobs",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required.\n\nThe name of the tenant to list jobs on. We accept \"my_tenant\" as\na valid tenant if the account only has access to one tenant.\nA valid parent would be \"tenants\/my_tenant\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Optional.\n\nThe maximum number of items to return.\nAcceptable values are 1 to 100. Defaults to 100.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional.\n\nPagination token returned in a previous request.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "description": "Optional.\n\nSupported dimensions for querying are as follows:\n\n* state=[Job.State]\n\nAttempts to query with an unrecognized filter dimension will result in\nan INVALID_ARGUMENT error. Sample Query:\n\n* state=OPEN",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListJobsResponse"
              },
              "description": "List the jobs in Hire."
            },
            "get": {
              "id": "hire.tenants.jobs.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/tenants/{tenantsId}/jobs/{jobsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required.\n\nThe name of the job to retrieve.",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+\/jobs\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Job"
              },
              "description": "Get a job in Hire."
            },
            "patch": {
              "id": "hire.tenants.jobs.patch",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/tenants/{tenantsId}/jobs/{jobsId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Output only. Required during UpdateJob.\n\nThe resource name of this Job. This is generated by the service when a job\nis created. Job name takes the form of \"tenants\/*\/jobs\/*\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+\/jobs\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "UpdateJobRequest"
              },
              "response": {
                "$ref": "Job"
              },
              "description": "Updates a job in Hire."
            },
            "create": {
              "id": "hire.tenants.jobs.create",
              "path": "v1beta1/{+parent}/jobs",
              "flatPath": "v1beta1/tenants/{tenantsId}/jobs",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required.\n\nThe name of the tenant to create the jobs on. We accept \"my_tenant\" as\na valid tenant if the account only has access to one tenant.\nA valid parent would be \"tenants\/my_tenant\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "CreateJobRequest"
              },
              "response": {
                "$ref": "Job"
              },
              "description": "Create a job in Hire."
            },
            "delete": {
              "id": "hire.tenants.jobs.delete",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/tenants/{tenantsId}/jobs/{jobsId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required.\n\nThe name of the job to delete.",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+\/jobs\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "description": "Delete a job in Hire."
            }
          }
        },
        "applications": {
          "methods": {
            "list": {
              "id": "hire.tenants.applications.list",
              "path": "v1beta1/{+parent}/applications",
              "flatPath": "v1beta1/tenants/{tenantsId}/applications",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The name of the tenant to list applications on. We accept \"my_tenant\" as\na valid tenant if the account only has access to one tenant.\nA valid parent would be \"tenants\/my_tenant\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of items to return.\nAcceptable values are 1 to 100. Defaults to 100.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional pagination token returned in a previous request.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "description": "Optional filter on applications fields. Attempts to query with an\nunrecognized filter dimension will result in an INVALID_ARGUMENT error.\nSupported querying are as follows:\n\n* status.state=[Application.Status.State]\n* status.update_time>=[RFS 3339 formatted Timestamp]\n\nFor filtering on multiple fields, we only support AND operations.\nSample Query:\n\n* status.state=ACTIVE AND status.update_time>=\"2018-01-02T06:23:10.843Z\"",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListApplicationsResponse"
              },
              "description": "List the applications in Hire."
            },
            "get": {
              "id": "hire.tenants.applications.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/tenants/{tenantsId}/applications/{applicationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the application to retrieve.",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+\/applications\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Application"
              },
              "description": "Get an application in Hire."
            }
          }
        },
        "users": {
          "methods": {
            "get": {
              "id": "hire.tenants.users.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/tenants/{tenantsId}/users/{usersId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the user to retrieve.",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+\/users\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "User"
              },
              "description": "Get a user in Hire."
            }
          }
        },
        "customFieldSpecs": {
          "methods": {
            "list": {
              "id": "hire.tenants.customFieldSpecs.list",
              "path": "v1beta1/{+parent}/customFieldSpecs",
              "flatPath": "v1beta1/tenants/{tenantsId}/customFieldSpecs",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The name of the tenant to list custom field spec on. We accept\n\"my_tenant\" as a valid tenant if the account only has access to one tenant.\nA valid parent would be \"tenants\/my_tenant\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of items to return.\nAcceptable values are 1 to 100. Defaults to 100.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional pagination token returned in a previous request.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "description": "Optional filter on custom field spec. Attempts to query with an\nunrecognized filter dimension will result in an INVALID_ARGUMENT error.\nSupported querying are as follows:\n\n* object_types[]=[CustomFieldSpec.ObjectType]\n\nSample Query:\n\n* object_types[]=JOB",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListCustomFieldSpecsResponse"
              },
              "description": "List the custom field spec in Hire."
            },
            "get": {
              "id": "hire.tenants.customFieldSpecs.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/tenants/{tenantsId}/customFieldSpecs/{customFieldSpecsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the custom field spec to retrieve.",
                  "location": "path",
                  "required": true,
                  "pattern": "^tenants\/[^\/]+\/customFieldSpecs\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "CustomFieldSpec"
              },
              "description": "Get a custom field spec in Hire."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}